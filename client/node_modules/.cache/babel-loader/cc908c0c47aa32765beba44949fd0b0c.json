{"ast":null,"code":"import React, { useState, Component } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './css/main.css';\nimport './css/util.css';\nimport './signup.css';\nimport axios from 'axios';\nexport default class Logs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setStartDate = date => {\n      this.setState({\n        startDate: date,\n        data: [],\n        search: \"\"\n      });\n    };\n\n    this.handleSubmit = async () => {\n      var date = this.state.startDate;\n      const response = await axios.post('http://localhost:5000/logs', {\n        date: date\n      });\n\n      if (response.data.error) {\n        this.setState({\n          error: response.data.error\n        });\n      } else {\n        this.setState({\n          data: response.data.data,\n          error: \"\"\n        });\n      }\n    };\n\n    this.handleDownload = async () => {\n      var date = this.state.startDate;\n      const response = await axios.post('http://localhost:5000/download', {\n        date: date\n      });\n\n      if (response.data.error) {\n        this.setState({\n          error: response.data.error\n        });\n      } else {\n        const element = document.createElement(\"a\");\n        const file = new Blob([response.data], {\n          type: 'text/plain'\n        });\n        element.href = URL.createObjectURL(file);\n        element.download = \"data.txt\";\n        document.body.appendChild(element); // Required for this to work in FireFox\n\n        element.click();\n      }\n    };\n\n    this.componentDidMount = async () => {\n      var date = this.state.startDate;\n      const response = await axios.post('http://localhost:5000/logs', {\n        date: date\n      });\n\n      if (response.data.error) {\n        this.setState({\n          error: response.data.error\n        });\n      } else {\n        this.setState({\n          data: response.data.data,\n          error: \"\"\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        search: event.target.value\n      });\n    };\n\n    this.state = {\n      startDate: new Date()\n    };\n  }\n\n  render() {\n    const {\n      data,\n      search\n    } = this.state;\n\n    if (data) {\n      const filteredData = data.filter(record => record.name.toLowerCase().includes(search));\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Aishwarya/Downloads/deep-blue/client/src/Logs.jsx"],"names":["React","useState","Component","DatePicker","axios","Logs","constructor","props","setStartDate","date","setState","startDate","data","search","handleSubmit","state","response","post","error","handleDownload","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","componentDidMount","handleChange","event","target","value","Date","render","filteredData","filter","record","name","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './css/main.css';\r\nimport './css/util.css';\r\nimport './signup.css';\r\nimport axios from 'axios'\r\n\r\n\r\nexport default class Logs extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = { startDate: new Date()}\r\n    }\r\n    setStartDate = (date) => {\r\n        this.setState({startDate: date, data: [], search: \"\"})\r\n\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        var date = this.state.startDate\r\n        const response = await axios.post('http://localhost:5000/logs', {date: date})\r\n        if(response.data.error) {\r\n            this.setState({error: response.data.error})\r\n        }\r\n        else {\r\n            this.setState({data: response.data.data, error: \"\"})\r\n        }\r\n    }\r\n\r\n\r\n    handleDownload = async () => {\r\n        var date = this.state.startDate\r\n        const response = await axios.post('http://localhost:5000/download', {date: date})\r\n        if(response.data.error) {\r\n            this.setState({error: response.data.error})\r\n        }\r\n        else {\r\n            const element = document.createElement(\"a\");\r\n            const file = new Blob([response.data], {type: 'text/plain'});\r\n            element.href = URL.createObjectURL(file);\r\n            element.download = \"data.txt\";\r\n            document.body.appendChild(element); // Required for this to work in FireFox\r\n            element.click();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount = async () => {\r\n        var date = this.state.startDate\r\n          const response = await axios.post('http://localhost:5000/logs', {date: date})\r\n          if(response.data.error) {\r\n            this.setState({error: response.data.error})\r\n        }\r\n        else {\r\n            this.setState({data: response.data.data, error: \"\"})\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ search: event.target.value });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const { data, search } = this.state\r\n        if (data) {\r\n            const filteredData = data.filter(record => record.name.toLowerCase().includes(search))\r\n\r\n        }\r\n\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}