{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya\\\\Downloads\\\\deep-blue\\\\client\\\\src\\\\Database.jsx\";\nimport React, { useState, Component } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './css/main.css';\nimport './css/util.css';\nimport './signup.css';\nimport axios from 'axios';\nexport default class Logs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setStartDate = date => {\n      this.setState({\n        startDate: date\n      });\n    };\n\n    this.handleSubmit = async () => {\n      var date = this.state.startDate;\n      const response = await axios.get('http://localhost:5000/database');\n\n      if (response.data.error) {\n        this.setState({\n          error: response.data.error\n        });\n      } else {\n        this.setState({\n          data: response.data.data,\n          error: \"\"\n        });\n      }\n    };\n\n    this.componentDidMount = async () => {\n      var date = this.state.startDate;\n      const response = await axios.get('http://localhost:5000/database');\n\n      if (response.data.error) {\n        this.setState({\n          error: response.data.error\n        });\n      } else {\n        this.setState({\n          data: response.data.data,\n          error: \"\"\n        });\n      }\n    };\n\n    this.state = {\n      startDate: new Date()\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      class: \"container py-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-lg-11 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row py-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.data ? this.state.data.map(record => React.createElement(\"div\", {\n      class: \"col-lg-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"figure\", {\n      class: \"rounded p-3 bg-white shadow-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        width: \"420px\",\n        height: \"250px\"\n      },\n      src: record.image,\n      alt: \"\",\n      class: \"w-100 card-img-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"figcaption\", {\n      class: \"p-4 card-img-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      class: \"h5 font-weight-bold mb-2 font-italic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, record.name), React.createElement(\"p\", {\n      class: \"mb-0 text-small text-muted font-italic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, record.phone))))) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"No data\"))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Aishwarya/Downloads/deep-blue/client/src/Database.jsx"],"names":["React","useState","Component","DatePicker","axios","Logs","constructor","props","setStartDate","date","setState","startDate","handleSubmit","state","response","get","data","error","componentDidMount","Date","render","map","record","width","height","image","name","phone"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './css/main.css';\r\nimport './css/util.css';\r\nimport './signup.css';\r\nimport axios from 'axios'\r\n\r\n\r\nexport default class Logs extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = { startDate: new Date()}\r\n    }\r\n    setStartDate = (date) => {\r\n        this.setState({startDate: date})\r\n\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        var date = this.state.startDate\r\n        const response = await axios.get('http://localhost:5000/database')\r\n        if(response.data.error) {\r\n            this.setState({error: response.data.error})\r\n        }\r\n        else {\r\n            this.setState({data: response.data.data, error: \"\"})\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        var date = this.state.startDate\r\n          const response = await axios.get('http://localhost:5000/database')\r\n          if(response.data.error) {\r\n            this.setState({error: response.data.error})\r\n        }\r\n        else {\r\n            this.setState({data: response.data.data, error: \"\"})\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n            <div class=\"container py-5\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-11 mx-auto\">\r\n                        <div class=\"row py-5\">\r\n                            {this.state.data ? (this.state.data.map(record => (\r\n                                <div class=\"col-lg-4\">\r\n                                <figure class=\"rounded p-3 bg-white shadow-sm\">\r\n                                    <img style={{width: \"420px\", height: \"250px\"}} src={record.image} alt=\"\" class=\"w-100 card-img-top\" />\r\n                                    <figcaption class=\"p-4 card-img-bottom\">\r\n                                    <h2 class=\"h5 font-weight-bold mb-2 font-italic\">{record.name}</h2>\r\n                                    <p class=\"mb-0 text-small text-muted font-italic\">{record.phone}</p>\r\n                                    </figcaption>\r\n                                </figure>\r\n                            </div>\r\n                            ))): <h1>No data</h1>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}